extends ./base.jade

block content
	h2 Settings

	div.well.row
		h4 Locations
		.form-horizontal
			.form-group
				label.col-sm-3.control-label Default Location
				div.col-sm-3
					input(id='locations[0][lat]' type='text' placeholder='Latitude' value='#{locations[0].lat}').form-control
				div.col-sm-3
					input(id='locations[0][lon]' type='text' placeholder='Longitude' value='#{locations[0].lon}').form-control
				button#location-change.btn.btn-default Change
			p.help-block This section will go under some big changes in the future... I'll likely move this to be a search-bar thingy in the navbar later on.
	
	div.well.row
		h4 Look and feel
		div.col-sm-4
			form.form-inline
				div.form-group
					div.dropdown#dd-theme
						button.btn.btn-default.dropdown-toggle(type='button' data-toggle='dropdown' aria-expanded='true')#ddm-theme Theme #[i.fa.fa-angle-down]
						ul.dropdown-menu(aria-labeledby='ddm-theme')
							each t in theme_list
								li(class=(t === '#{theme}' ? 'active' : ''))
									a(href='javascript:update_setting("theme", "' + t + '");')= t
		div.col-sm-4.btn-group(data-toggle='buttons')
			label.btn.btn-default#navbar-color-label Alternate navbar color?
				input(type='checkbox')#navbar-color

	div.well.row
		h4 API Keys
		div.col-sm-12
			table#api-key-table.table.table-bordered.table-striped
				thead
					tr
						td Service name
						td API Key
						td 
				tbody
					each source in valid_sources
						tr
							td
								if (source.source_site !== undefined && source.source_site !== '')
									a(href="#{source.source_site}")= source.name
								else
									span= source.name
							if (source.api_key_name === undefined)
								td(colspan='2').text-muted.text-center No key needed
							else
								td
									input(type='text' id='#{source.api_key_name}-key' placeholder='API key' value=((api_keys !== undefined) ? api_keys[source.api_key_name] : '')).form-control
								td
									button.btn.btn-default.btn-block.key-update-btn(data-update-key='#{source.api_key_name}') Change

	script.
		$('#dd-theme li.active > a').append(' (current)');
		
		if (#{navbar_inversed}) {
			$('#navbar-color').prop('checked', 'true');
			$('#navbar-color-label').addClass('active');
		}

		function update_setting(key, value) {
			$.ajax({
				url: '/settings/' + key + '/' + value,
				method: 'POST'
			});

			location.reload(true);
		}
		
		$('.key-update-btn').click(function () {
			update_setting('api_keys/' + $(this).data('update-key'), $('#' + $(this).data('update-key') + '-key').val());
		});

		$('#navbar-color').change(function () {
			update_setting('navbar_inversed', !#{navbar_inversed});
		});
		
		$('#location-change').click(function () {
			$.ajax({
				url: '/settings/locations/0/' + $('#locations\\[0\\]\\[lat\\]').val() + '/' + $('#locations\\[0\\]\\[lon\\]').val(),
				method: 'POST'
			});

			location.reload(false);
		});
